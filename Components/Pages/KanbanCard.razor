@using Data
@using BlazorAppEmpty.Models
@inject KanbanService kanbanSvc
@inject NavigationManager NavMan
@rendermode InteractiveServer
@using BlazorAppEmpty.Services
@inject UserService US

<div class="kanban-card">
	<b>
		@Card.Title
	</b>
	<p>
		@Card.Description
	</p>
	<i>
		@Card.Deadline
	</i>

	<strong>@Card.User.Name</strong>

	<div>
	<select @bind="destinationId">
		@foreach( var column in kbCol)
		{
			<option value="@column.Id">@column.Title</option>
		}
	</select>
	<button @onclick="Move">Move</button>
	</div>
</div>

@code {
	[Parameter]
	public KanbanCardModel? Card { get; set; }
	private bool hideMenu = true;
	private int destinationId;
	[Parameter]
	public int originId { get; set; }

	private List<KanbanColumnModel>? kbCol;

	public User user { get; set; }

	protected override void OnInitialized()
	{
		kbCol = kanbanSvc.kanbanColumns;
		user = US.GetUser();
	}

	private void Move()
	{
		if (destinationId != 0)
		{
		KanbanCardModel temp = Card;
		kbCol.Find(x => x.Id == originId).Cards.Remove(Card);
		kbCol.FirstOrDefault(x => x.Id == destinationId).Cards.Add(temp);
		NavMan.Refresh(true);			
		}
	}
}
