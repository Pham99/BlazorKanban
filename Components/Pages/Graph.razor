@page "/graph"
@layout Layout.MainLayout
<h3>Graph</h3>

<LineChart @ref="lineChart" Width="1000"/>
<Callout></Callout>
<Button Color="ButtonColor.Primary"> Primary </Button>
<div class="mb-5">
	<Alert Color="AlertColor.Primary"> A simple primary alert - check it out! </Alert>
</div>
<div>
	<Alert Color="AlertColor.Primary"> A simple primary alert - check it out! </Alert>
</div>


@code 
{
	private LineChart lineChart = default!;
	private LineChartOptions lineChartOptions = default!;
	private ChartData chartData = default!;

	protected override void OnInitialized()
	{
		var colors = ColorUtility.CategoricalTwelveColors;

		var labels = new List<string> { "1", "2", "3", "4", "5" };
		var datasets = new List<IChartDataset>();

		var dataset1 = new LineChartDataset
		{
			Label = "Real Pogress",
			Data = new List<double> { 10, 7, 5, 2, 1 },
			BackgroundColor = new List<string> { colors[1] },
			BorderWidth = new List<double> { 2 },
			HoverBorderWidth = new List<double> { 10 },
			PointBackgroundColor = new List<string> { colors[1]},
			PointRadius = new List<int> { 0 },
			PointHoverRadius = new List<int> { 4 },
		};
		datasets.Add(dataset1);

		chartData = new ChartData { Labels = labels, Datasets = datasets };

		lineChartOptions = new();
		lineChartOptions.Responsive = true;
		lineChartOptions.Interaction = new Interaction { Mode = InteractionMode.Index };

		lineChartOptions.Scales.X!.Title = new ChartAxesTitle { Text = "Work", Display = true };
		lineChartOptions.Scales.Y!.Title = new ChartAxesTitle { Text = "Time", Display = true };

		lineChartOptions.Plugins.Title!.Text = "Burndown";
		lineChartOptions.Plugins.Title.Display = true;

	}

	protected override async Task OnAfterRenderAsync(bool firstRender)
	{
		if (firstRender)
		{
			await lineChart.InitializeAsync(chartData, lineChartOptions);
		}
		await base.OnAfterRenderAsync(firstRender);
	}
}
